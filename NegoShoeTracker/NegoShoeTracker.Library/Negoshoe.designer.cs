#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NegoShoeTracker.Library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NegoShoe")]
	public partial class NegoshoeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertItemStatus(ItemStatus instance);
    partial void UpdateItemStatus(ItemStatus instance);
    partial void DeleteItemStatus(ItemStatus instance);
    partial void InsertShipmentItem(ShipmentItem instance);
    partial void UpdateShipmentItem(ShipmentItem instance);
    partial void DeleteShipmentItem(ShipmentItem instance);
    partial void InsertMerchant(Merchant instance);
    partial void UpdateMerchant(Merchant instance);
    partial void DeleteMerchant(Merchant instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertPurchaseItem(PurchaseItem instance);
    partial void UpdatePurchaseItem(PurchaseItem instance);
    partial void DeletePurchaseItem(PurchaseItem instance);
    partial void InsertReservationItem(ReservationItem instance);
    partial void UpdateReservationItem(ReservationItem instance);
    partial void DeleteReservationItem(ReservationItem instance);
    partial void InsertReserver(Reserver instance);
    partial void UpdateReserver(Reserver instance);
    partial void DeleteReserver(Reserver instance);
    partial void InsertShipment(Shipment instance);
    partial void UpdateShipment(Shipment instance);
    partial void DeleteShipment(Shipment instance);
    #endregion
		
		public NegoshoeDataContext() : 
				base(global::NegoShoeTracker.Library.Properties.Settings.Default.NegoShoeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NegoshoeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegoshoeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegoshoeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegoshoeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ItemStatus> ItemStatus
		{
			get
			{
				return this.GetTable<ItemStatus>();
			}
		}
		
		public System.Data.Linq.Table<ShipmentItem> ShipmentItems
		{
			get
			{
				return this.GetTable<ShipmentItem>();
			}
		}
		
		public System.Data.Linq.Table<Merchant> Merchants
		{
			get
			{
				return this.GetTable<Merchant>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseItem> PurchaseItems
		{
			get
			{
				return this.GetTable<PurchaseItem>();
			}
		}
		
		public System.Data.Linq.Table<ReservationItem> ReservationItems
		{
			get
			{
				return this.GetTable<ReservationItem>();
			}
		}
		
		public System.Data.Linq.Table<Reserver> Reservers
		{
			get
			{
				return this.GetTable<Reserver>();
			}
		}
		
		public System.Data.Linq.Table<Shipment> Shipments
		{
			get
			{
				return this.GetTable<Shipment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemStatus")]
	public partial class ItemStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordID;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ItemStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShipmentItem")]
	public partial class ShipmentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordID;
		
		private int _SID;
		
		private string _ItemName;
		
		private int _MerchantID;
		
		private int _Quantity;
		
		private double _BoughtPrice;
		
		private double _TargetPrice;
		
		private double _SoldPrice;
		
		private int _StatusID;
		
		private System.Nullable<double> _CurrentExchangeRate;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnMerchantIDChanging(int value);
    partial void OnMerchantIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnBoughtPriceChanging(double value);
    partial void OnBoughtPriceChanged();
    partial void OnTargetPriceChanging(double value);
    partial void OnTargetPriceChanged();
    partial void OnSoldPriceChanging(double value);
    partial void OnSoldPriceChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnCurrentExchangeRateChanging(System.Nullable<double> value);
    partial void OnCurrentExchangeRateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ShipmentItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantID", DbType="Int NOT NULL")]
		public int MerchantID
		{
			get
			{
				return this._MerchantID;
			}
			set
			{
				if ((this._MerchantID != value))
				{
					this.OnMerchantIDChanging(value);
					this.SendPropertyChanging();
					this._MerchantID = value;
					this.SendPropertyChanged("MerchantID");
					this.OnMerchantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoughtPrice", DbType="Float NOT NULL")]
		public double BoughtPrice
		{
			get
			{
				return this._BoughtPrice;
			}
			set
			{
				if ((this._BoughtPrice != value))
				{
					this.OnBoughtPriceChanging(value);
					this.SendPropertyChanging();
					this._BoughtPrice = value;
					this.SendPropertyChanged("BoughtPrice");
					this.OnBoughtPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPrice", DbType="Float NOT NULL")]
		public double TargetPrice
		{
			get
			{
				return this._TargetPrice;
			}
			set
			{
				if ((this._TargetPrice != value))
				{
					this.OnTargetPriceChanging(value);
					this.SendPropertyChanging();
					this._TargetPrice = value;
					this.SendPropertyChanged("TargetPrice");
					this.OnTargetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldPrice", DbType="Float NOT NULL")]
		public double SoldPrice
		{
			get
			{
				return this._SoldPrice;
			}
			set
			{
				if ((this._SoldPrice != value))
				{
					this.OnSoldPriceChanging(value);
					this.SendPropertyChanging();
					this._SoldPrice = value;
					this.SendPropertyChanged("SoldPrice");
					this.OnSoldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentExchangeRate", DbType="Float")]
		public System.Nullable<double> CurrentExchangeRate
		{
			get
			{
				return this._CurrentExchangeRate;
			}
			set
			{
				if ((this._CurrentExchangeRate != value))
				{
					this.OnCurrentExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._CurrentExchangeRate = value;
					this.SendPropertyChanged("CurrentExchangeRate");
					this.OnCurrentExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Merchant")]
	public partial class Merchant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MerchantID;
		
		private string _Name;
		
		private string _URL;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMerchantIDChanging(int value);
    partial void OnMerchantIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Merchant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MerchantID
		{
			get
			{
				return this._MerchantID;
			}
			set
			{
				if ((this._MerchantID != value))
				{
					this.OnMerchantIDChanging(value);
					this.SendPropertyChanging();
					this._MerchantID = value;
					this.SendPropertyChanged("MerchantID");
					this.OnMerchantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseID;
		
		private int _MerchantID;
		
		private System.Nullable<double> _TotalInUSD;
		
		private System.Nullable<double> _TotalInPeso;
		
		private System.Nullable<double> _ExchangeRate;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnMerchantIDChanging(int value);
    partial void OnMerchantIDChanged();
    partial void OnTotalInUSDChanging(System.Nullable<double> value);
    partial void OnTotalInUSDChanged();
    partial void OnTotalInPesoChanging(System.Nullable<double> value);
    partial void OnTotalInPesoChanged();
    partial void OnExchangeRateChanging(System.Nullable<double> value);
    partial void OnExchangeRateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public Purchase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantID", DbType="Int NOT NULL")]
		public int MerchantID
		{
			get
			{
				return this._MerchantID;
			}
			set
			{
				if ((this._MerchantID != value))
				{
					this.OnMerchantIDChanging(value);
					this.SendPropertyChanging();
					this._MerchantID = value;
					this.SendPropertyChanged("MerchantID");
					this.OnMerchantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInUSD", DbType="Float")]
		public System.Nullable<double> TotalInUSD
		{
			get
			{
				return this._TotalInUSD;
			}
			set
			{
				if ((this._TotalInUSD != value))
				{
					this.OnTotalInUSDChanging(value);
					this.SendPropertyChanging();
					this._TotalInUSD = value;
					this.SendPropertyChanged("TotalInUSD");
					this.OnTotalInUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInPeso", DbType="Float")]
		public System.Nullable<double> TotalInPeso
		{
			get
			{
				return this._TotalInPeso;
			}
			set
			{
				if ((this._TotalInPeso != value))
				{
					this.OnTotalInPesoChanging(value);
					this.SendPropertyChanging();
					this._TotalInPeso = value;
					this.SendPropertyChanged("TotalInPeso");
					this.OnTotalInPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Float")]
		public System.Nullable<double> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseItem")]
	public partial class PurchaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseItemID;
		
		private int _PurchaseID;
		
		private string _ItemName;
		
		private int _Quantity;
		
		private double _BoughtPrice;
		
		private double _TargetPrice;
		
		private double _SoldPrice;
		
		private System.DateTime _PurchaseDate;
		
		private int _StatusID;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseItemIDChanging(int value);
    partial void OnPurchaseItemIDChanged();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnBoughtPriceChanging(double value);
    partial void OnBoughtPriceChanged();
    partial void OnTargetPriceChanging(double value);
    partial void OnTargetPriceChanged();
    partial void OnSoldPriceChanging(double value);
    partial void OnSoldPriceChanged();
    partial void OnPurchaseDateChanging(System.DateTime value);
    partial void OnPurchaseDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public PurchaseItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseItemID
		{
			get
			{
				return this._PurchaseItemID;
			}
			set
			{
				if ((this._PurchaseItemID != value))
				{
					this.OnPurchaseItemIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseItemID = value;
					this.SendPropertyChanged("PurchaseItemID");
					this.OnPurchaseItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
		public int PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoughtPrice", DbType="Float NOT NULL")]
		public double BoughtPrice
		{
			get
			{
				return this._BoughtPrice;
			}
			set
			{
				if ((this._BoughtPrice != value))
				{
					this.OnBoughtPriceChanging(value);
					this.SendPropertyChanging();
					this._BoughtPrice = value;
					this.SendPropertyChanged("BoughtPrice");
					this.OnBoughtPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPrice", DbType="Float NOT NULL")]
		public double TargetPrice
		{
			get
			{
				return this._TargetPrice;
			}
			set
			{
				if ((this._TargetPrice != value))
				{
					this.OnTargetPriceChanging(value);
					this.SendPropertyChanging();
					this._TargetPrice = value;
					this.SendPropertyChanged("TargetPrice");
					this.OnTargetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldPrice", DbType="Float NOT NULL")]
		public double SoldPrice
		{
			get
			{
				return this._SoldPrice;
			}
			set
			{
				if ((this._SoldPrice != value))
				{
					this.OnSoldPriceChanging(value);
					this.SendPropertyChanging();
					this._SoldPrice = value;
					this.SendPropertyChanged("SoldPrice");
					this.OnSoldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservationItem")]
	public partial class ReservationItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ItemName;
		
		private int _QuantityOrdered;
		
		private int _RemainingUnreserved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnQuantityOrderedChanging(int value);
    partial void OnQuantityOrderedChanged();
    partial void OnRemainingUnreservedChanging(int value);
    partial void OnRemainingUnreservedChanged();
    #endregion
		
		public ReservationItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOrdered", DbType="Int NOT NULL")]
		public int QuantityOrdered
		{
			get
			{
				return this._QuantityOrdered;
			}
			set
			{
				if ((this._QuantityOrdered != value))
				{
					this.OnQuantityOrderedChanging(value);
					this.SendPropertyChanging();
					this._QuantityOrdered = value;
					this.SendPropertyChanged("QuantityOrdered");
					this.OnQuantityOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingUnreserved", DbType="Int NOT NULL")]
		public int RemainingUnreserved
		{
			get
			{
				return this._RemainingUnreserved;
			}
			set
			{
				if ((this._RemainingUnreserved != value))
				{
					this.OnRemainingUnreservedChanging(value);
					this.SendPropertyChanging();
					this._RemainingUnreserved = value;
					this.SendPropertyChanged("RemainingUnreserved");
					this.OnRemainingUnreservedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reserver")]
	public partial class Reserver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _QuantityReserved;
		
		private int _ItemID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityReservedChanging(int value);
    partial void OnQuantityReservedChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    #endregion
		
		public Reserver()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityReserved", DbType="Int NOT NULL")]
		public int QuantityReserved
		{
			get
			{
				return this._QuantityReserved;
			}
			set
			{
				if ((this._QuantityReserved != value))
				{
					this.OnQuantityReservedChanging(value);
					this.SendPropertyChanging();
					this._QuantityReserved = value;
					this.SendPropertyChanged("QuantityReserved");
					this.OnQuantityReservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shipment")]
	public partial class Shipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ShipmentNumber;
		
		private string _ShipmentName;
		
		private System.DateTime _ArrivalDate;
		
		private double _SalexTax;
		
		private double _ShippingCost;
		
		private double _ShoppingCharge;
		
		private double _Profit;
		
		private double _CurrentExchangeRate;
		
		private string _Notes;
		
		private double _TotalCost;
		
		private double _TotalProjectedSales;
		
		private double _TotalSales;
		
		private double _SubTotal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShipmentNumberChanging(int value);
    partial void OnShipmentNumberChanged();
    partial void OnShipmentNameChanging(string value);
    partial void OnShipmentNameChanged();
    partial void OnArrivalDateChanging(System.DateTime value);
    partial void OnArrivalDateChanged();
    partial void OnSalexTaxChanging(double value);
    partial void OnSalexTaxChanged();
    partial void OnShippingCostChanging(double value);
    partial void OnShippingCostChanged();
    partial void OnShoppingChargeChanging(double value);
    partial void OnShoppingChargeChanged();
    partial void OnProfitChanging(double value);
    partial void OnProfitChanged();
    partial void OnCurrentExchangeRateChanging(double value);
    partial void OnCurrentExchangeRateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTotalCostChanging(double value);
    partial void OnTotalCostChanged();
    partial void OnTotalProjectedSalesChanging(double value);
    partial void OnTotalProjectedSalesChanged();
    partial void OnTotalSalesChanging(double value);
    partial void OnTotalSalesChanged();
    partial void OnSubTotalChanging(double value);
    partial void OnSubTotalChanged();
    #endregion
		
		public Shipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentNumber", DbType="Int NOT NULL")]
		public int ShipmentNumber
		{
			get
			{
				return this._ShipmentNumber;
			}
			set
			{
				if ((this._ShipmentNumber != value))
				{
					this.OnShipmentNumberChanging(value);
					this.SendPropertyChanging();
					this._ShipmentNumber = value;
					this.SendPropertyChanged("ShipmentNumber");
					this.OnShipmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShipmentName
		{
			get
			{
				return this._ShipmentName;
			}
			set
			{
				if ((this._ShipmentName != value))
				{
					this.OnShipmentNameChanging(value);
					this.SendPropertyChanging();
					this._ShipmentName = value;
					this.SendPropertyChanged("ShipmentName");
					this.OnShipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDate", DbType="DateTime NOT NULL")]
		public System.DateTime ArrivalDate
		{
			get
			{
				return this._ArrivalDate;
			}
			set
			{
				if ((this._ArrivalDate != value))
				{
					this.OnArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDate = value;
					this.SendPropertyChanged("ArrivalDate");
					this.OnArrivalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalexTax", DbType="Float NOT NULL")]
		public double SalexTax
		{
			get
			{
				return this._SalexTax;
			}
			set
			{
				if ((this._SalexTax != value))
				{
					this.OnSalexTaxChanging(value);
					this.SendPropertyChanging();
					this._SalexTax = value;
					this.SendPropertyChanged("SalexTax");
					this.OnSalexTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCost", DbType="Float NOT NULL")]
		public double ShippingCost
		{
			get
			{
				return this._ShippingCost;
			}
			set
			{
				if ((this._ShippingCost != value))
				{
					this.OnShippingCostChanging(value);
					this.SendPropertyChanging();
					this._ShippingCost = value;
					this.SendPropertyChanged("ShippingCost");
					this.OnShippingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCharge", DbType="Float NOT NULL")]
		public double ShoppingCharge
		{
			get
			{
				return this._ShoppingCharge;
			}
			set
			{
				if ((this._ShoppingCharge != value))
				{
					this.OnShoppingChargeChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCharge = value;
					this.SendPropertyChanged("ShoppingCharge");
					this.OnShoppingChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Float NOT NULL")]
		public double Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentExchangeRate", DbType="Float NOT NULL")]
		public double CurrentExchangeRate
		{
			get
			{
				return this._CurrentExchangeRate;
			}
			set
			{
				if ((this._CurrentExchangeRate != value))
				{
					this.OnCurrentExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._CurrentExchangeRate = value;
					this.SendPropertyChanged("CurrentExchangeRate");
					this.OnCurrentExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Float NOT NULL")]
		public double TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalProjectedSales", DbType="Float NOT NULL")]
		public double TotalProjectedSales
		{
			get
			{
				return this._TotalProjectedSales;
			}
			set
			{
				if ((this._TotalProjectedSales != value))
				{
					this.OnTotalProjectedSalesChanging(value);
					this.SendPropertyChanging();
					this._TotalProjectedSales = value;
					this.SendPropertyChanged("TotalProjectedSales");
					this.OnTotalProjectedSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Float NOT NULL")]
		public double TotalSales
		{
			get
			{
				return this._TotalSales;
			}
			set
			{
				if ((this._TotalSales != value))
				{
					this.OnTotalSalesChanging(value);
					this.SendPropertyChanging();
					this._TotalSales = value;
					this.SendPropertyChanged("TotalSales");
					this.OnTotalSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Float NOT NULL")]
		public double SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
