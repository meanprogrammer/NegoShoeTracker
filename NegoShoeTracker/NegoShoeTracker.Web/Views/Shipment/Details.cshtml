@model NegoShoeTracker.Library.Shipment

@{
    ViewBag.Title = "Details";
}
<div>
    <h3>Shipment Details</h3>
    <table class="table">
        <tr>
            <td>Shipment #</td>
            <td colspan="3">@Html.DisplayFor(model => model.ShipmentNumber)</td>
        </tr>
        <tr>
            <td>Shipment Name</td>
            <td>@Html.DisplayFor(model => model.ShipmentName)</td>
            <td>Arrival Date</td>
            <td>@Html.DisplayFor(model => model.ArrivalDate)</td>
        </tr>
        <tr>
            <td>Shipping Cost</td>
            <td>@Html.DisplayFor(model => model.ShippingCost)</td>
            <td>Sales Tax</td>
            <td>@Html.DisplayFor(model => model.SalexTax)</td>
        </tr>
        <tr>
            <td>Shopping Charge</td>
            <td>@Html.DisplayFor(model => model.ShoppingCharge)</td>
            <td>Exchange Rate</td>
            <td>@Html.DisplayFor(model => model.CurrentExchangeRate)</td>
        </tr>
        <tr>
            <td>Total Cost</td>
            <td><strong>@Html.DisplayFor(model => model.TotalCost)</strong></td>
            <td>Profit</td>
            <td>@Html.DisplayFor(model => model.Profit)</td>
        </tr>
        <tr>
            <td>Notes</td>
            <td colspan="3">@Html.DisplayFor(model => model.Notes)</td>
        </tr>
    </table>
    
    
</div>

<div class="row">
    <div class="col-md-11">
        @Html.ActionLink("Add Shipment Item", "Create", "ShipmentItem", null, new { data_modal = "", id = "btnCreate", @class = "btn btn-default" })
    </div>
    <div class="col-md-1">
        @Html.ActionLink("Delete", "DeleteItems", "ShipmentItem", null, new { data_modal = "", id = "btnCreate", @class = "btn btn-default" })
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <td></td>
                    <th>Item Name</th>
                    <th>Merchant</th>
                    <th>Qty.</th>
                    <th>BP</th>
                    <th>TP</th>
                    <th>SP</th>
                    <th>Status</th>
                    <td></td>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <td colspan="5"></td>
                    <td>@Html.DisplayFor(model => model.TotalProjectedSales)</td>
                    <td>@Html.DisplayFor(model => model.TotalSales)</td>
                    <td></td>
                </tr>
            </tfoot>
            @foreach (var m in Model.ShipmentItems)
            {
                <tr>
                    <td><input id="@m.RecordID" type="checkbox" onclick="toggleSelectedIds(@m.RecordID, this.checked)" /></td>
                    <td>@m.ItemName</td>
                    <td>@m.MerchantName</td>
                    <td>@m.Quantity</td>
                    <td>@m.BoughtPrice</td>
                    <td>@m.TargetPrice</td>
                    <td>@m.SoldPrice</td>
                    <td>@m.Status</td>
                    <td>@Html.ActionLink("Details", "Details", "ShipmentItem", new { id = m.RecordID }, new object { }) |
                    @Html.ActionLink("Delete", "Delete", "ShipmentItem", new { id = m.RecordID, parentId = m.SID }, new object { })</td>
                </tr>
            }
        </table>
    </div>
</div>

<div id="myModal" class="modal fade in bs-example-modal-lg">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="myModalContent"></div>
        </div>
    </div>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")
}

<script type="text/javascript">
    var ids = [];
    function toggleSelectedIds(id, checked) {
        alert(id);
        alert(checked);
        if (checked) {
            ids.push(id);
        }
        else {
            index = ids.indexOf(id);
            if(index > -1)
            {
                ids.splice(index, 1);
            }
        }

        alert(ids);
    }
</script>